<?php

/**
 * Admin Dark Theme v 1.0.1
 *
 * @author Piotr Markiewicz (pmarki)
 * @copyright Piotr Markiewicz
 * This is a color style for Admin Reno theme
 * ProcessWire 2.8
 * Copyright (C) 2011 by Ryan Cramer
 * Licensed under GNU/GPL v2, see LICENSE.TXT
 *
 * http://www.processwire.com
 *
 */


class AdminDark extends Process implements Module, ConfigurableModule {

    /**
     * getModuleInfo is a module required by all modules to tell ProcessWire about them
     *
     * @return array
     *
     */
    public static function getModuleInfo() {

        return array(
            'title' => 'Admin Dark Theme',
            'version' => 104,
            'summary' => 'Dark color style for Reno theme.',
            'author' => 'Piotr Markiewicz',
            'singular' => true,
            'autoload' => 'template=admin'
        );
    }

    /**
     * Default configuration for module
     *
     */
    static protected $defaults = array(
        'options' => array(
                'StickyHeader',
                'ExpandPages',
                'ExpandSetup',
                'HostName',
        )
    );

    static $config;

    public function init() {
        self::$config = $this->modules->getModuleConfigData($this);
        $this->config->js('adminDark', json_encode(self::$config));
        parent::init();
    }

    public static function getModuleConfigInputfields(array $data) {
        $data = array_merge(self::$defaults, $data);
        $wrapper = new InputfieldWrapper();

        $f = wire('modules')->get("InputfieldCheckboxes");
        $f->attr('name', 'options');
        $f->label = __('Options', __FILE__);
        $f->notes =  __('Uncheck all options if you want to use this module with AdminOnSteroids', __FILE__);
        $f->collapsed = Inputfield::collapsedNever;
        $f->table = true;

        $f->addOption('StickyHeader', __('Compact sticky header and fixed sidebar', __FILE__));
        $f->addOption('HostName', __('Show host name with "open home page in a new tab" button', __FILE__));
        $f->addOption('ExpandPages', __('Disable accordion on Pages ', __FILE__));
        $f->addOption('ExpandSetup', __('Disable accordion on Setup', __FILE__));
        $f->addOption('ExpandModules', __('Disable accordion on Modules ', __FILE__));
        $f->addOption('ExpandAccess', __('Disable accordion on Access ', __FILE__));
        $f->addOption('CollapsedPages', __('Keep Pages collapsed', __FILE__));
        $f->addOption('CollapsedSetup', __('Keep Setup collapsed', __FILE__));
        $f->addOption('CollapsedModules', __('Keep Modules collapsed', __FILE__));
        $f->addOption('CollapsedAccess', __('Keep Access collapsed', __FILE__));
        
        $f->attr('value', isset($data['options']) ? $data['options'] : self::$defaults['options']);

        $wrapper->add($f);

        return $wrapper;
    }
}
